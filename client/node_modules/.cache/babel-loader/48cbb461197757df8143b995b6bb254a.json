{"ast":null,"code":"var _jsxFileName = \"/Users/coby/Documents/Test/client/src/auth/index.js\",\n    _s = $RefreshSig$();\n\nimport React, { createContext, useEffect, useState } from \"react\";\nimport { useContext } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport api from '../api';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthContext = /*#__PURE__*/createContext();\nconsole.log(\"create AuthContext: \" + AuthContext); // THESE ARE ALL THE TYPES OF UPDATES TO OUR AUTH STATE THAT CAN BE PROCESSED\n\nexport const AuthActionType = {\n  GET_LOGGED_IN: \"GET_LOGGED_IN\",\n  REGISTER_USER: \"REGISTER_USER\",\n  LOGIN_USER: \"LOGIN_USER\",\n  LOGOUT_USER: \"LOGOUT_USER\",\n  SHOW_ERROR: \"SHOW_ERROR\",\n  HIDE_ERROR: \"HIDE_ERROR\"\n};\n\nfunction AuthContextProvider(props) {\n  _s();\n\n  const [auth, setAuth] = useState({\n    user: null,\n    loggedIn: false,\n    err: null\n  });\n  const history = useHistory();\n  useEffect(() => {\n    auth.getLoggedIn();\n  }, []);\n\n  const authReducer = action => {\n    const {\n      type,\n      payload\n    } = action;\n\n    switch (type) {\n      case AuthActionType.GET_LOGGED_IN:\n        {\n          return setAuth({\n            user: payload.user,\n            loggedIn: payload.loggedIn,\n            err: null\n          });\n        }\n\n      case AuthActionType.REGISTER_USER:\n        {\n          return setAuth({\n            user: payload.user,\n            loggedIn: true,\n            err: null\n          });\n        }\n\n      case AuthActionType.LOGIN_USER:\n        {\n          return setAuth({\n            user: payload.user,\n            loggedIn: true,\n            err: null\n          });\n        }\n\n      case AuthActionType.LOGOUT_USER:\n        {\n          return setAuth({\n            user: null,\n            loggedIn: false,\n            err: null\n          });\n        }\n\n      case AuthActionType.SHOW_ERROR:\n        {\n          return setAuth({\n            user: auth.user,\n            loggedIn: auth.loggedIn,\n            err: payload.msg\n          });\n        }\n\n      case AuthActionType.HIDE_ERROR:\n        {\n          return setAuth({\n            user: auth.user,\n            loggedIn: auth.loggedIn,\n            err: null\n          });\n        }\n\n      default:\n        return auth;\n    }\n  };\n\n  auth.logoutUser = async function (store) {\n    const response = await api.logoutUser();\n\n    if (response.status === 200) {\n      authReducer({\n        type: AuthActionType.LOGOUT_USER,\n        payload: null\n      });\n      store.closeCurrentList();\n      history.push(\"/\");\n    }\n  };\n\n  auth.loginUser = async function (userData, store) {\n    try {\n      const response = await api.loginUser(userData);\n\n      if (response.status === 200) {\n        authReducer({\n          type: AuthActionType.LOGIN_USER,\n          payload: {\n            user: response.data.user\n          }\n        });\n        history.push(\"/lists/\");\n        store.loadIdNamePairs();\n      }\n    } catch (err) {\n      authReducer({\n        type: AuthActionType.SHOW_ERROR,\n        payload: {\n          msg: err.response.data.errorMessage\n        }\n      });\n    }\n  };\n\n  auth.getLoggedIn = async function () {\n    try {\n      const response = await api.getLoggedIn();\n\n      if (response.status === 200) {\n        authReducer({\n          type: AuthActionType.GET_LOGGED_IN,\n          payload: {\n            loggedIn: response.data.loggedIn,\n            user: response.data.user\n          }\n        });\n      }\n    } catch (err) {\n      console.log(err.response.data.errorMessage);\n    }\n  };\n\n  auth.registerUser = async function (userData, store) {\n    try {\n      const response = await api.registerUser(userData);\n\n      if (response.status === 200) {\n        authReducer({\n          type: AuthActionType.REGISTER_USER,\n          payload: {\n            user: response.data.user\n          }\n        });\n        history.push(\"/\");\n        store.loadIdNamePairs();\n      }\n    } catch (err) {\n      authReducer({\n        type: AuthActionType.SHOW_ERROR,\n        payload: {\n          msg: err.response.data.errorMessage\n        }\n      });\n    }\n  };\n\n  auth.hideError = function () {\n    authReducer({\n      type: AuthActionType.HIDE_ERROR,\n      payload: null\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: {\n      auth\n    },\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 164,\n    columnNumber: 9\n  }, this);\n}\n\n_s(AuthContextProvider, \"2H3UBMd47WdTTGel6CnODlf+WYY=\", false, function () {\n  return [useHistory];\n});\n\n_c = AuthContextProvider;\nexport default AuthContext;\nexport { AuthContextProvider };\n\nvar _c;\n\n$RefreshReg$(_c, \"AuthContextProvider\");","map":{"version":3,"sources":["/Users/coby/Documents/Test/client/src/auth/index.js"],"names":["React","createContext","useEffect","useState","useContext","useHistory","api","AuthContext","console","log","AuthActionType","GET_LOGGED_IN","REGISTER_USER","LOGIN_USER","LOGOUT_USER","SHOW_ERROR","HIDE_ERROR","AuthContextProvider","props","auth","setAuth","user","loggedIn","err","history","getLoggedIn","authReducer","action","type","payload","msg","logoutUser","store","response","status","closeCurrentList","push","loginUser","userData","data","loadIdNamePairs","errorMessage","registerUser","hideError","children"],"mappings":"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","sourcesContent":["import React, { createContext, useEffect, useState } from \"react\";\nimport { useContext } from 'react';\nimport { useHistory } from 'react-router-dom'\nimport api from '../api'\n\nconst AuthContext = createContext();\nconsole.log(\"create AuthContext: \" + AuthContext);\n\n// THESE ARE ALL THE TYPES OF UPDATES TO OUR AUTH STATE THAT CAN BE PROCESSED\nexport const AuthActionType = {\n    GET_LOGGED_IN: \"GET_LOGGED_IN\",\n    REGISTER_USER: \"REGISTER_USER\",\n    LOGIN_USER: \"LOGIN_USER\",\n    LOGOUT_USER: \"LOGOUT_USER\",\n    SHOW_ERROR: \"SHOW_ERROR\",\n    HIDE_ERROR: \"HIDE_ERROR\"\n}\n\nfunction AuthContextProvider(props) {\n    const [auth, setAuth] = useState({\n        user: null,\n        loggedIn: false,\n        err: null\n    });\n    const history = useHistory();\n\n    useEffect(() => {\n        auth.getLoggedIn();\n    }, []);\n\n    const authReducer = (action) => {\n        const { type, payload } = action;\n        switch (type) {\n            case AuthActionType.GET_LOGGED_IN: {\n                return setAuth({\n                    user: payload.user,\n                    loggedIn: payload.loggedIn,\n                    err: null\n                });\n            }\n            case AuthActionType.REGISTER_USER: {\n                return setAuth({\n                    user: payload.user,\n                    loggedIn: true,\n                    err: null\n                })\n            }\n            case AuthActionType.LOGIN_USER: {\n                return setAuth({\n                    user: payload.user,\n                    loggedIn: true,\n                    err: null\n                })\n            }\n            case AuthActionType.LOGOUT_USER: {\n                return setAuth({\n                    user: null,\n                    loggedIn: false,\n                    err: null\n                })\n            }\n            case AuthActionType.SHOW_ERROR: {\n                return setAuth({\n                    user: auth.user,\n                    loggedIn: auth.loggedIn,\n                    err: payload.msg\n                })\n            }\n            case AuthActionType.HIDE_ERROR: {\n                return setAuth({\n                    user: auth.user,\n                    loggedIn: auth.loggedIn,\n                    err: null\n                })\n            }\n            default:\n                return auth;\n        }\n    }\n\n    auth.logoutUser = async function (store) {\n        const response = await api.logoutUser();\n        if(response.status === 200) {\n            authReducer({\n                type: AuthActionType.LOGOUT_USER,\n                payload: null\n            })\n            store.closeCurrentList();\n            history.push(\"/\");\n        }\n    }\n\n    auth.loginUser = async function (userData, store) {\n        try {\n            const response = await api.loginUser(userData);\n            if (response.status === 200) {\n                authReducer({\n                    type: AuthActionType.LOGIN_USER,\n                    payload: {\n                        user: response.data.user,\n                    }\n                })\n                history.push(\"/lists/\");\n                store.loadIdNamePairs();\n            }\n        } catch (err) {\n            authReducer({\n                type: AuthActionType.SHOW_ERROR,\n                payload: {\n                    msg: err.response.data.errorMessage\n                }\n            })\n        }\n    }\n\n    auth.getLoggedIn = async function () {\n        try {\n            const response = await api.getLoggedIn();\n            if (response.status === 200) {\n                authReducer({\n                    type: AuthActionType.GET_LOGGED_IN,\n                    payload: {\n                        loggedIn: response.data.loggedIn,\n                        user: response.data.user\n                    }\n                });\n            }\n        } catch (err) {\n            console.log(err.response.data.errorMessage);\n        }\n    }\n\n    auth.registerUser = async function(userData, store) {\n        try {\n            const response = await api.registerUser(userData);\n            if (response.status === 200) {\n                authReducer({\n                    type: AuthActionType.REGISTER_USER,\n                    payload: {\n                        user: response.data.user\n                    }\n                })\n                history.push(\"/\");\n                store.loadIdNamePairs();\n            }\n        } catch (err) {\n            authReducer({\n                type: AuthActionType.SHOW_ERROR,\n                payload: {\n                    msg: err.response.data.errorMessage\n                }\n            })\n        }\n    }\n\n    auth.hideError = function() {\n        authReducer({\n            type: AuthActionType.HIDE_ERROR,\n            payload: null\n        })\n    }\n\n    return (\n        <AuthContext.Provider value={{\n            auth\n        }}>\n            {props.children}\n        </AuthContext.Provider>\n    );\n}\n\nexport default AuthContext;\nexport { AuthContextProvider };"]},"metadata":{},"sourceType":"module"}