[{"/Users/coby/Documents/Test/client/src/index.js":"1","/Users/coby/Documents/Test/client/src/App.js":"2","/Users/coby/Documents/Test/client/src/reportWebVitals.js":"3","/Users/coby/Documents/Test/client/src/components/index.js":"4","/Users/coby/Documents/Test/client/src/store/index.js":"5","/Users/coby/Documents/Test/client/src/auth/index.js":"6","/Users/coby/Documents/Test/client/src/components/AppBanner.js":"7","/Users/coby/Documents/Test/client/src/components/HomeScreen.js":"8","/Users/coby/Documents/Test/client/src/components/HomeWrapper.js":"9","/Users/coby/Documents/Test/client/src/components/SplashScreen.js":"10","/Users/coby/Documents/Test/client/src/components/ListCard.js":"11","/Users/coby/Documents/Test/client/src/components/LoginScreen.js":"12","/Users/coby/Documents/Test/client/src/components/RegisterScreen.js":"13","/Users/coby/Documents/Test/client/src/components/Statusbar.js":"14","/Users/coby/Documents/Test/client/src/components/Top5Item.js":"15","/Users/coby/Documents/Test/client/src/components/WorkspaceScreen.js":"16","/Users/coby/Documents/Test/client/src/api/index.js":"17","/Users/coby/Documents/Test/client/src/components/Modal.js":"18","/Users/coby/Documents/Test/client/src/components/Copyright.js":"19"},{"size":928,"mtime":1637599699713,"results":"20","hashOfConfig":"21"},{"size":1398,"mtime":1637607200827,"results":"22","hashOfConfig":"21"},{"size":362,"mtime":1637599699713,"results":"23","hashOfConfig":"21"},{"size":704,"mtime":1637610461650,"results":"24","hashOfConfig":"21"},{"size":16116,"mtime":1637688208368,"results":"25","hashOfConfig":"21"},{"size":4969,"mtime":1637612744063,"results":"26","hashOfConfig":"21"},{"size":4628,"mtime":1637630018788,"results":"27","hashOfConfig":"21"},{"size":1543,"mtime":1637685354710,"results":"28","hashOfConfig":"21"},{"size":332,"mtime":1637606362545,"results":"29","hashOfConfig":"21"},{"size":1385,"mtime":1637606073125,"results":"30","hashOfConfig":"21"},{"size":6617,"mtime":1637685551735,"results":"31","hashOfConfig":"21"},{"size":3510,"mtime":1637606864135,"results":"32","hashOfConfig":"21"},{"size":5377,"mtime":1637599699711,"results":"33","hashOfConfig":"21"},{"size":3945,"mtime":1637688277433,"results":"34","hashOfConfig":"21"},{"size":2335,"mtime":1637631595874,"results":"35","hashOfConfig":"21"},{"size":4124,"mtime":1637631211100,"results":"36","hashOfConfig":"21"},{"size":1866,"mtime":1637599699708,"results":"37","hashOfConfig":"21"},{"size":2350,"mtime":1637599699711,"results":"38","hashOfConfig":"21"},{"size":452,"mtime":1637599699709,"results":"39","hashOfConfig":"21"},{"filePath":"40","messages":"41","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},"3j4noh",{"filePath":"43","messages":"44","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45","usedDeprecatedRules":"42"},{"filePath":"46","messages":"47","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"48","messages":"49","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"50","messages":"51","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"52","messages":"53","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"54","usedDeprecatedRules":"42"},{"filePath":"55","messages":"56","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"57","messages":"58","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"59","messages":"60","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61","usedDeprecatedRules":"42"},{"filePath":"62","messages":"63","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"64","messages":"65","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"66","messages":"67","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"68","usedDeprecatedRules":"42"},{"filePath":"69","messages":"70","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"71","messages":"72","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"73","messages":"74","errorCount":0,"fatalErrorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"75","usedDeprecatedRules":"42"},{"filePath":"76","messages":"77","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"78","usedDeprecatedRules":"42"},{"filePath":"79","messages":"80","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"81","messages":"82","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"83","usedDeprecatedRules":"42"},{"filePath":"84","messages":"85","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},"/Users/coby/Documents/Test/client/src/index.js",[],["86","87"],"/Users/coby/Documents/Test/client/src/App.js",["88"],"import './App.css';\nimport { React } from 'react'\nimport { BrowserRouter, Route, Switch } from 'react-router-dom'\nimport { AuthContextProvider } from './auth';\nimport { GlobalStoreContextProvider } from './store'\nimport {\n    AppBanner,\n    HomeWrapper,\n    RegisterScreen,\n    Statusbar,\n    WorkspaceScreen,\n    LoginScreen,\n    SplashScreen\n} from './components'\n/*\n    This is our application's top-level component.\n    \n    @author McKilla Gorilla\n*/\n/*\n  This is the entry-point for our application. Notice that we\n  inject our store into all the components in our application.\n  \n  @author McKilla Gorilla\n*/\nconst App = () => {\n    return (\n        <BrowserRouter>\n            <AuthContextProvider>\n                <GlobalStoreContextProvider>              \n                    <AppBanner />\n                    <Switch>\n                        <Route path=\"/\" exact component={SplashScreen} />\n                        <Route path=\"/register/\" exact component={RegisterScreen} />\n                        <Route path=\"/top5list/:id\" exact component={WorkspaceScreen} />\n                        <Route path=\"/login/\" exact component={LoginScreen} />\n                        <Route path=\"/lists/\" exact component={HomeWrapper} />\n                    </Switch>\n                </GlobalStoreContextProvider>\n            </AuthContextProvider>\n        </BrowserRouter>\n    )\n}\n\nexport default App","/Users/coby/Documents/Test/client/src/reportWebVitals.js",[],"/Users/coby/Documents/Test/client/src/components/index.js",[],"/Users/coby/Documents/Test/client/src/store/index.js",[],"/Users/coby/Documents/Test/client/src/auth/index.js",["89","90"],"import React, { createContext, useEffect, useState } from \"react\";\nimport { useContext } from 'react';\nimport { useHistory } from 'react-router-dom'\nimport api from '../api'\n\nconst AuthContext = createContext();\nconsole.log(\"create AuthContext: \" + AuthContext);\n\n// THESE ARE ALL THE TYPES OF UPDATES TO OUR AUTH STATE THAT CAN BE PROCESSED\nexport const AuthActionType = {\n    GET_LOGGED_IN: \"GET_LOGGED_IN\",\n    REGISTER_USER: \"REGISTER_USER\",\n    LOGIN_USER: \"LOGIN_USER\",\n    LOGOUT_USER: \"LOGOUT_USER\",\n    SHOW_ERROR: \"SHOW_ERROR\",\n    HIDE_ERROR: \"HIDE_ERROR\"\n}\n\nfunction AuthContextProvider(props) {\n    const [auth, setAuth] = useState({\n        user: null,\n        loggedIn: false,\n        err: null\n    });\n    const history = useHistory();\n\n    useEffect(() => {\n        auth.getLoggedIn();\n    }, []);\n\n    const authReducer = (action) => {\n        const { type, payload } = action;\n        switch (type) {\n            case AuthActionType.GET_LOGGED_IN: {\n                return setAuth({\n                    user: payload.user,\n                    loggedIn: payload.loggedIn,\n                    err: null\n                });\n            }\n            case AuthActionType.REGISTER_USER: {\n                return setAuth({\n                    user: payload.user,\n                    loggedIn: true,\n                    err: null\n                })\n            }\n            case AuthActionType.LOGIN_USER: {\n                return setAuth({\n                    user: payload.user,\n                    loggedIn: true,\n                    err: null\n                })\n            }\n            case AuthActionType.LOGOUT_USER: {\n                return setAuth({\n                    user: null,\n                    loggedIn: false,\n                    err: null\n                })\n            }\n            case AuthActionType.SHOW_ERROR: {\n                return setAuth({\n                    user: auth.user,\n                    loggedIn: auth.loggedIn,\n                    err: payload.msg\n                })\n            }\n            case AuthActionType.HIDE_ERROR: {\n                return setAuth({\n                    user: auth.user,\n                    loggedIn: auth.loggedIn,\n                    err: null\n                })\n            }\n            default:\n                return auth;\n        }\n    }\n\n    auth.logoutUser = async function (store) {\n        const response = await api.logoutUser();\n        if(response.status === 200) {\n            authReducer({\n                type: AuthActionType.LOGOUT_USER,\n                payload: null\n            })\n            store.closeCurrentList();\n            history.push(\"/\");\n        }\n    }\n\n    auth.loginUser = async function (userData, store) {\n        try {\n            const response = await api.loginUser(userData);\n            if (response.status === 200) {\n                authReducer({\n                    type: AuthActionType.LOGIN_USER,\n                    payload: {\n                        user: response.data.user,\n                    }\n                })\n                history.push(\"/lists/\");\n                store.loadIdNamePairs();\n            }\n        } catch (err) {\n            authReducer({\n                type: AuthActionType.SHOW_ERROR,\n                payload: {\n                    msg: err.response.data.errorMessage\n                }\n            })\n        }\n    }\n\n    auth.getLoggedIn = async function () {\n        try {\n            const response = await api.getLoggedIn();\n            if (response.status === 200) {\n                authReducer({\n                    type: AuthActionType.GET_LOGGED_IN,\n                    payload: {\n                        loggedIn: response.data.loggedIn,\n                        user: response.data.user\n                    }\n                });\n            }\n        } catch (err) {\n            console.log(err.response.data.errorMessage);\n        }\n    }\n\n    auth.registerUser = async function(userData, store) {\n        try {\n            const response = await api.registerUser(userData);\n            if (response.status === 200) {\n                authReducer({\n                    type: AuthActionType.REGISTER_USER,\n                    payload: {\n                        user: response.data.user\n                    }\n                })\n                history.push(\"/\");\n                store.loadIdNamePairs();\n            }\n        } catch (err) {\n            authReducer({\n                type: AuthActionType.SHOW_ERROR,\n                payload: {\n                    msg: err.response.data.errorMessage\n                }\n            })\n        }\n    }\n\n    auth.hideError = function() {\n        authReducer({\n            type: AuthActionType.HIDE_ERROR,\n            payload: null\n        })\n    }\n\n    return (\n        <AuthContext.Provider value={{\n            auth\n        }}>\n            {props.children}\n        </AuthContext.Provider>\n    );\n}\n\nexport default AuthContext;\nexport { AuthContextProvider };","/Users/coby/Documents/Test/client/src/components/AppBanner.js",[],"/Users/coby/Documents/Test/client/src/components/HomeScreen.js",["91","92","93","94"],"/Users/coby/Documents/Test/client/src/components/HomeWrapper.js",["95"],"import { useContext } from 'react'\nimport HomeScreen from './HomeScreen'\nimport SplashScreen from './SplashScreen'\nimport AuthContext from '../auth'\n\nexport default function HomeWrapper() {\n    const { auth } = useContext(AuthContext);\n    console.log(\"HomeWrapper auth.loggedIn: \" + auth.loggedIn);\n    \n    return <HomeScreen />\n}","/Users/coby/Documents/Test/client/src/components/SplashScreen.js",[],"/Users/coby/Documents/Test/client/src/components/ListCard.js",["96","97","98"],"/Users/coby/Documents/Test/client/src/components/LoginScreen.js",["99","100","101"],"import { useContext } from 'react';\nimport AuthContext from '../auth'\nimport Avatar from '@mui/material/Avatar';\nimport Box from '@mui/material/Box';\nimport Button from '@mui/material/Button';\nimport Container from '@mui/material/Container';\nimport CssBaseline from '@mui/material/CssBaseline';\nimport Grid from '@mui/material/Grid';\nimport Link from '@mui/material/Link';\nimport TextField from '@mui/material/TextField';\nimport Typography from '@mui/material/Typography';\nimport LockOutlinedIcon from '@mui/icons-material/LockOutlined';\nimport Paper from '@mui/material/Paper';\nimport { GlobalStoreContext } from '../store';\nimport FormControlLabel from '@mui/material/FormControlLabel';\nimport Checkbox from '@mui/material/Checkbox';\nimport Modal from './Modal';\n\nexport default function LoginScreen() {\n  const { auth } = useContext(AuthContext);\n  const { store } = useContext(GlobalStoreContext);\n\n  const handleSubmit = (event) => {\n    event.preventDefault();\n    const formData = new FormData(event.currentTarget);\n    // eslint-disable-next-line no-console\n    auth.loginUser({\n        email: formData.get('email'),\n        password: formData.get('password')\n    }, store);\n  };\n\n  return (\n      <Grid container component=\"main\" sx={{ height: '100vh' }}>\n        <CssBaseline />\n        <Modal />\n        <Grid\n          item\n          xs={false}\n          sm={4}\n          md={7}\n          sx={{\n            backgroundImage: 'url(https://source.unsplash.com/random)',\n            backgroundRepeat: 'no-repeat',\n            backgroundColor: (t) =>\n              t.palette.mode === 'light' ? t.palette.grey[50] : t.palette.grey[900],\n            backgroundSize: 'cover',\n            backgroundPosition: 'center',\n          }}\n        />\n        <Grid item xs={12} sm={8} md={5} component={Paper} elevation={6} square>\n          <Box\n            sx={{\n              my: 8,\n              mx: 4,\n              display: 'flex',\n              flexDirection: 'column',\n              alignItems: 'center',\n            }}\n          >\n            <Avatar sx={{ m: 1, bgcolor: 'secondary.main' }}>\n              <LockOutlinedIcon />\n            </Avatar>\n            <Typography component=\"h1\" variant=\"h5\">\n              Sign in\n            </Typography>\n            <Box component=\"form\" noValidate onSubmit={handleSubmit} sx={{ mt: 1 }}>\n              <TextField\n                margin=\"normal\"\n                required\n                fullWidth\n                id=\"email\"\n                label=\"Email Address\"\n                name=\"email\"\n                autoComplete=\"email\"\n                autoFocus\n              />\n              <TextField\n                margin=\"normal\"\n                required\n                fullWidth\n                name=\"password\"\n                label=\"Password\"\n                type=\"password\"\n                id=\"password\"\n                autoComplete=\"current-password\"\n              />\n              <Button\n                type=\"submit\"\n                fullWidth\n                variant=\"contained\"\n                sx={{ mt: 3, mb: 2 }}\n              >\n                Sign In\n              </Button>\n              <Grid container>\n                <Grid item xs>\n                </Grid>\n                <Grid item>\n                  <Link href=\"/register/\" variant=\"body2\">\n                    {\"Don't have an account? Sign Up\"}\n                  </Link>\n                </Grid>\n              </Grid>\n            </Box>\n          </Box>\n        </Grid>\n      </Grid>\n  );\n}","/Users/coby/Documents/Test/client/src/components/RegisterScreen.js",[],"/Users/coby/Documents/Test/client/src/components/Statusbar.js",["102"],"/Users/coby/Documents/Test/client/src/components/Top5Item.js",["103","104","105","106","107","108","109","110"],"import { React, useContext, useState } from \"react\";\nimport { GlobalStoreContext } from '../store'\nimport TextField from '@mui/material/TextField';\nimport Box from '@mui/material/Box';\nimport ListItem from '@mui/material/ListItem';\nimport IconButton from '@mui/material/IconButton';\nimport EditIcon from '@mui/icons-material/Edit';\nimport { borderRadius } from \"@mui/system\";\n/*\n    This React component represents a single item in our\n    Top 5 List, which can be edited or moved around.\n    \n    @author McKilla Gorilla\n*/\nfunction Top5Item(props) {\n    const { store } = useContext(GlobalStoreContext);\n    const [editActive, setEditActive] = useState(false);\n    const [draggedTo, setDraggedTo] = useState(0);\n    const [text, setText] = useState(\"\");\n\n    function handleToggleEdit(event) {\n        event.stopPropagation();\n        toggleEdit();\n    }\n\n    function toggleEdit() {\n        let newActive = !editActive;\n        if (newActive) {\n            store.setIsItemEditActive();\n        }\n        setEditActive(newActive);\n    }\n\n    function handleKeyPress(event) {\n        if (event.code === \"Enter\") {\n            let id = event.target.id.substring(\"item-\".length);\n            store.updateItem(id, event.target.value);\n            toggleEdit();\n        }\n    }\n\n    function handleClick(event) {\n        if(event.detail === 2) {\n            handleToggleEdit(event);\n        }\n    }\n\n    function handleUpdateText(event) {\n        setText(event.target.value);\n    }\n\n    let { index } = props;\n\n    let itemClass = \"top5-item\";\n\n    let component = \n        <Box sx={{ flexGrow: 1 , fontSize: \"40pt\"}} onClick = {handleClick} id = \"list-item\">{props.text}</Box>\n    if(editActive) {\n        component = \n        <TextField\n            required\n            fullWidth\n            id={'item-' + (index)}\n            name=\"name\"\n            className='top5-item'\n            onKeyPress={handleKeyPress}\n            onChange={handleUpdateText}\n            defaultValue={props.text}\n            inputProps={{style: {fontSize: \"24pt\", color: \"black\", background: \"#DEF581\", height: \"22px\", left: \"2%\"}}}\n            style = {{\n                height: \"60px\",\n                color: \"yellow\",\n                width: \"113.7%\"\n            }}\n            autoFocus\n        />\n    }\n    return (component);\n}\n\nexport default Top5Item;","/Users/coby/Documents/Test/client/src/components/WorkspaceScreen.js",["111","112"],"import { useState, useContext } from 'react'\nimport Top5Item from './Top5Item.js'\nimport List from '@mui/material/List';\nimport { Typography } from '@mui/material'\nimport { GlobalStoreContext } from '../store/index.js'\nimport { TextField } from '@mui/material';\nimport Button from '@mui/material/Button';\nimport Grid from '@mui/material/Grid';\nimport Container from '@mui/material/Container';\n/*\n    This React component lets us edit a loaded list, which only\n    happens when we are on the proper route.\n    \n    @author McKilla Gorilla\n*/\nfunction WorkspaceScreen() {\n    const { store } = useContext(GlobalStoreContext);\n    const [ listName, setListName ] = useState(store.currentList.name);\n\n    const saveList = function () {\n        store.changeListName(store.currentList._id, listName);\n        store.closeCurrentList();\n    }\n\n    function handleUpdate (event) {\n        setListName(event.target.value);\n    }\n\n    return (\n        <div id=\"top5-workspace\">\n            <TextField defaultValue = {store.currentList.name} id = \"list-name\" size = \"small\" sx = {{width: '300px', left: '10px'}}\n                onChange = {handleUpdate}/>\n            <div id=\"workspace-edit\">\n                \n            <Container id = \"item-container\">\n                <Grid container spacing={1} border = \"1px\" rowSpacing = {3}>\n                    <Grid container item spacing={2} sx = {{border: '1px'}}>\n                        <Grid item xs = {0.75}> \n                            <div id = \"item-number\"> 1 </div>\n                        </Grid>\n                        <Grid item xs = {10}>\n                            <Top5Item\n                                text={store.currentList.items[0]}\n                                index = {0}\n                            />\n                        </Grid>\n                    </Grid>\n                    <Grid container item spacing={2}>\n                        <Grid item xs = {0.75}> \n                            <div id = \"item-number\"> 2 </div>\n                        </Grid>\n                        <Grid item xs = {10}>\n                            <Top5Item\n                                text={store.currentList.items[1]}\n                                index = {1}\n                            />\n                        </Grid>\n                    </Grid>\n                    <Grid container item spacing={2}>\n                        <Grid item xs = {0.75}> \n                            <div id = \"item-number\"> 3 </div>\n                        </Grid>\n                        <Grid item xs = {10}> \n                            <Top5Item\n                                text={store.currentList.items[2]}\n                                index = {2}\n                            />\n                        </Grid>\n                    </Grid>\n                    <Grid container item spacing={2}>\n                        <Grid item xs = {0.75}> \n                            <div id = \"item-number\"> 4 </div>\n                        </Grid>\n                        <Grid item xs = {10}>\n                            <Top5Item\n                                text={store.currentList.items[3]}\n                                index = {3}\n                            />\n                        </Grid>\n                    </Grid>\n                    <Grid container item spacing={2}>\n                        <Grid item xs = {0.75}> \n                            <div id = \"item-number\"> 5 </div>\n                        </Grid>\n                        <Grid item xs = {10}> \n                            <Top5Item\n                                text={store.currentList.items[4]}\n                                index = {4}\n                            />\n                        </Grid>\n                    </Grid>\n                </Grid>\n            </Container>\n            </div>\n            <div id = \"workspaceButtons\">\n                <Button variant = \"contained\" onClick = {saveList}> Save </Button>\n                &nbsp;&nbsp;&nbsp;\n                <Button variant = \"contained\"> Publish </Button>\n            </div>\n        </div>\n    )\n}\n\nexport default WorkspaceScreen;","/Users/coby/Documents/Test/client/src/api/index.js",[],"/Users/coby/Documents/Test/client/src/components/Modal.js",["113"],"import * as React from 'react';\nimport Box from '@mui/material/Box';\nimport Button from '@mui/material/Button';\nimport Modal from '@mui/material/Modal';\nimport AuthContext from '../auth';\nimport { useContext, useState } from 'react';\nimport Alert from '@mui/material/Alert';\nimport GlobalStoreContext from '../store';\n\nconst style = {\n  position: 'absolute',\n  top: '50%',\n  left: '50%',\n  transform: 'translate(-50%, -50%)',\n  width: 400,\n  bgcolor: 'background.paper',\n  border: '2px solid #000',\n  boxShadow: 24,\n  p: 4,\n};\n\nexport default function BasicModal() {\n  const { store } = useContext(GlobalStoreContext);\n  const { auth } = useContext(AuthContext);\n  let open = false;\n\n  const hideError = () => {\n      auth.hideError();\n  }\n\n  const cancelDeletion = () => {\n      store.unmarkListForDeletion();\n  }\n\n  const handleDeletion = () => {\n      store.deleteMarkedList();\n  }\n\n  let component = \"\";\n\n  if(auth.err) {\n    open = true;\n    component = <div>\n                    <Modal\n                        open={open}\n                        onClose={hideError}\n                        aria-labelledby=\"modal-modal-title\"\n                        aria-describedby=\"modal-modal-description\"\n                    >\n                        <Box sx={style}>\n                            <Alert severity = \"error\">{auth.err}</Alert>\n                            <Button variant = \"outlined\" onClick = {hideError}> Okay! </Button>\n                        </Box>\n                    </Modal>\n                </div>\n  }\n  if(store.listMarkedForDeletion) {\n    open=true;\n    component = <div>\n                    <Modal\n                        open={open}\n                        onClose={cancelDeletion}\n                        aria-labelledby=\"modal-modal-title\"\n                        aria-describedby=\"modal-modal-description\"\n                    >\n                        <Box sx={style}>\n                            <Alert severity = \"error\"> Are you sure you want to delete the Top 5 {store.listMarkedForDeletion.name}?</Alert>\n                            <Button variant = \"outlined\" onClick = {handleDeletion}> Confirm </Button>\n                            <Button variant = \"outlined\" onClick = {cancelDeletion}> Cancel </Button>\n                        </Box>\n                    </Modal>\n                </div>\n  }\n\n  return (component);\n}","/Users/coby/Documents/Test/client/src/components/Copyright.js",[],{"ruleId":"114","replacedBy":"115"},{"ruleId":"116","replacedBy":"117"},{"ruleId":"118","severity":1,"message":"119","line":10,"column":5,"nodeType":"120","messageId":"121","endLine":10,"endColumn":14},{"ruleId":"118","severity":1,"message":"122","line":2,"column":10,"nodeType":"120","messageId":"121","endLine":2,"endColumn":20},{"ruleId":"123","severity":1,"message":"124","line":29,"column":8,"nodeType":"125","endLine":29,"endColumn":10,"suggestions":"126"},{"ruleId":"118","severity":1,"message":"127","line":4,"column":10,"nodeType":"120","messageId":"121","endLine":4,"endColumn":13},{"ruleId":"118","severity":1,"message":"128","line":4,"column":15,"nodeType":"120","messageId":"121","endLine":4,"endColumn":25},{"ruleId":"118","severity":1,"message":"129","line":5,"column":8,"nodeType":"120","messageId":"121","endLine":5,"endColumn":15},{"ruleId":"123","severity":1,"message":"130","line":20,"column":8,"nodeType":"125","endLine":20,"endColumn":10,"suggestions":"131"},{"ruleId":"118","severity":1,"message":"132","line":3,"column":8,"nodeType":"120","messageId":"121","endLine":3,"endColumn":20},{"ruleId":"118","severity":1,"message":"133","line":3,"column":8,"nodeType":"120","messageId":"121","endLine":3,"endColumn":17},{"ruleId":"118","severity":1,"message":"134","line":8,"column":8,"nodeType":"120","messageId":"121","endLine":8,"endColumn":13},{"ruleId":"118","severity":1,"message":"135","line":27,"column":13,"nodeType":"120","messageId":"121","endLine":27,"endColumn":16},{"ruleId":"118","severity":1,"message":"136","line":6,"column":8,"nodeType":"120","messageId":"121","endLine":6,"endColumn":17},{"ruleId":"118","severity":1,"message":"137","line":15,"column":8,"nodeType":"120","messageId":"121","endLine":15,"endColumn":24},{"ruleId":"118","severity":1,"message":"138","line":16,"column":8,"nodeType":"120","messageId":"121","endLine":16,"endColumn":16},{"ruleId":"118","severity":1,"message":"139","line":28,"column":9,"nodeType":"120","messageId":"121","endLine":28,"endColumn":13},{"ruleId":"118","severity":1,"message":"140","line":5,"column":8,"nodeType":"120","messageId":"121","endLine":5,"endColumn":16},{"ruleId":"118","severity":1,"message":"141","line":6,"column":8,"nodeType":"120","messageId":"121","endLine":6,"endColumn":18},{"ruleId":"118","severity":1,"message":"142","line":7,"column":8,"nodeType":"120","messageId":"121","endLine":7,"endColumn":16},{"ruleId":"118","severity":1,"message":"143","line":8,"column":10,"nodeType":"120","messageId":"121","endLine":8,"endColumn":22},{"ruleId":"118","severity":1,"message":"144","line":18,"column":12,"nodeType":"120","messageId":"121","endLine":18,"endColumn":21},{"ruleId":"118","severity":1,"message":"145","line":18,"column":23,"nodeType":"120","messageId":"121","endLine":18,"endColumn":35},{"ruleId":"118","severity":1,"message":"139","line":19,"column":12,"nodeType":"120","messageId":"121","endLine":19,"endColumn":16},{"ruleId":"118","severity":1,"message":"146","line":54,"column":9,"nodeType":"120","messageId":"121","endLine":54,"endColumn":18},{"ruleId":"118","severity":1,"message":"147","line":3,"column":8,"nodeType":"120","messageId":"121","endLine":3,"endColumn":12},{"ruleId":"118","severity":1,"message":"128","line":4,"column":10,"nodeType":"120","messageId":"121","endLine":4,"endColumn":20},{"ruleId":"118","severity":1,"message":"148","line":6,"column":22,"nodeType":"120","messageId":"121","endLine":6,"endColumn":30},"no-native-reassign",["149"],"no-negated-in-lhs",["150"],"no-unused-vars","'Statusbar' is defined but never used.","Identifier","unusedVar","'useContext' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'auth'. Either include it or remove the dependency array.","ArrayExpression",["151"],"'Fab' is defined but never used.","'Typography' is defined but never used.","'AddIcon' is defined but never used.","React Hook useEffect has a missing dependency: 'store'. Either include it or remove the dependency array.",["152"],"'SplashScreen' is defined but never used.","'TextField' is defined but never used.","'Modal' is defined but never used.","'key' is assigned a value but never used.","'Container' is defined but never used.","'FormControlLabel' is defined but never used.","'Checkbox' is defined but never used.","'text' is assigned a value but never used.","'ListItem' is defined but never used.","'IconButton' is defined but never used.","'EditIcon' is defined but never used.","'borderRadius' is defined but never used.","'draggedTo' is assigned a value but never used.","'setDraggedTo' is assigned a value but never used.","'itemClass' is assigned a value but never used.","'List' is defined but never used.","'useState' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"153","fix":"154"},{"desc":"155","fix":"156"},"Update the dependencies array to be: [auth]",{"range":"157","text":"158"},"Update the dependencies array to be: [store]",{"range":"159","text":"160"},[810,812],"[auth]",[617,619],"[store]"]